#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

	require_relative "lexer"
	require_relative "lib/advent_core"
	require_relative "lib/advent_classes"

class AdventParser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 96)
	def parse(input)
		scan_str(input)
	end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    37,    37,    36,    36,    28,    41,    29,    30,    31,    32,
    34,    35,    33,     3,    13,    52,   -49,    20,    77,   -49,
    71,    43,    37,    21,    36,    42,    28,    76,     4,     5,
     6,     7,     8,    47,    22,    23,    24,     3,    13,    25,
    41,    20,    37,    26,    36,    27,    28,    21,    29,    30,
    31,    32,     4,     5,     6,     7,     8,    14,    22,    23,
    24,     3,    13,    25,    78,    20,    37,    39,    36,    81,
    28,    21,    29,    30,    31,    32,     4,     5,     6,     7,
     8,    14,    22,    23,    24,    13,    83,    25,    20,    37,
    73,    36,    72,    28,    21,    29,    30,    74,    27,    71,
     5,     6,     7,     8,    14,    22,    23,    24,    13,    24,
    25,    20,    37,    62,    36,   nil,    28,    21,    29,    30,
   nil,   nil,   nil,     5,     6,     7,     8,    14,    22,    23,
    24,    13,   nil,    25,    20,    37,   nil,    36,   nil,    28,
    21,    37,   nil,    36,   nil,    28,     5,     6,     7,     8,
    14,    22,    23,    24,    13,   nil,    25,    20,    37,   nil,
    36,   nil,    28,    21,   nil,   nil,   nil,   nil,   nil,     5,
     6,     7,     8,    14,    22,    23,    24,    13,   nil,    25,
    20,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,     5,     6,     7,     8,    14,    22,    23,    24,
    13,   nil,    25,    20,   nil,   nil,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,     5,     6,     7,     8,    14,
    22,    23,    24,    13,   nil,    25,    20,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,     4,     5,     6,
     7,     8,    14,    22,    23,    24,    13,   nil,    25,    20,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
   nil,     5,     6,     7,     8,    14,    22,    23,    24,    13,
   nil,    25,    20,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,     5,     6,     7,     8,    14,    22,
    23,    24,    13,   nil,    25,    20,   nil,   nil,   nil,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,     5,     6,     7,
     8,    14,    22,    23,    24,    13,   nil,    25,    20,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,
     5,     6,     7,     8,    14,    22,    23,    24,    13,   nil,
    25,    20,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,     5,     6,     7,     8,    14,    22,    23,
    24,    13,   nil,    25,    20,   nil,   nil,   nil,   nil,   nil,
    21,   nil,   nil,   nil,   nil,   nil,     5,     6,     7,     8,
    14,    22,    23,    24,    13,   nil,    25,    20,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,     5,
     6,     7,     8,    14,    22,    23,    24,    13,    65,    25,
    20,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,     5,     6,     7,     8,    14,    22,    23,    24,
    13,   nil,    25,    20,   nil,   nil,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,     5,     6,     7,     8,    14,
    22,    23,    24,    13,   nil,    25,    20,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,     5,     6,
     7,     8,    14,    22,    23,    24,    13,   nil,    25,    20,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
     4,     5,     6,     7,     8,    14,    22,    23,    24,    13,
   nil,    25,    20,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,     5,     6,     7,     8,    14,    22,
    23,    24,   nil,    37,    25,    36,   nil,    28,   nil,    29,
    30,    31,    32,    34,    35,    33,   nil,   nil,   nil,   nil,
    37,    67,    36,   nil,    28,    24,    29,    30,    31,    32,
    34,    35,    33,    37,   nil,    36,   nil,    28,   nil,    29,
    30,    31,    32,    34,    35,    33,    37,   nil,    36,   nil,
    28,   nil,    29,    30,    31,    32,    34,    35,    33,    37,
   nil,    36,   nil,    28,   nil,    29,    30,    31,    32,    34,
    35,    33,    37,   nil,    36,   nil,    28,   nil,    29,    30,
    31,    32,    34,    35,    33,    37,   nil,    36,   nil,    28,
   nil,    29,    30,    31,    32,    34,    35 ]

racc_action_check = [
    63,    44,    63,    44,    63,    47,    63,    63,    63,    63,
    63,    63,    63,    24,    24,    26,    47,    24,    64,    47,
    47,    18,    54,    24,    54,    17,    54,    63,    24,    24,
    24,    24,    24,    24,    24,    24,    24,     0,     0,    24,
    14,     0,    60,     1,    60,     1,    60,     0,    60,    60,
    60,    60,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    73,    73,     0,    71,    73,    61,     4,    61,    74,
    61,    73,    61,    61,    61,    61,    73,    73,    73,    73,
    73,    73,    73,    73,    73,    43,    79,    73,    43,    58,
    49,    58,    48,    58,    43,    58,    58,    50,    46,    81,
    43,    43,    43,    43,    43,    43,    43,    43,    41,    42,
    43,    41,    57,    36,    57,   nil,    57,    41,    57,    57,
   nil,   nil,   nil,    41,    41,    41,    41,    41,    41,    41,
    41,    39,   nil,    41,    39,    45,   nil,    45,   nil,    45,
    39,    55,   nil,    55,   nil,    55,    39,    39,    39,    39,
    39,    39,    39,    39,    20,   nil,    39,    20,    56,   nil,
    56,   nil,    56,    20,   nil,   nil,   nil,   nil,   nil,    20,
    20,    20,    20,    20,    20,    20,    20,    21,   nil,    20,
    21,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,    21,    21,    21,    21,    21,    21,    21,    21,
    25,   nil,    21,    25,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,    25,    25,    25,    25,    25,
    25,    25,    25,    27,   nil,    25,    27,   nil,   nil,   nil,
   nil,   nil,    27,   nil,   nil,   nil,   nil,    27,    27,    27,
    27,    27,    27,    27,    27,    27,    28,   nil,    27,    28,
   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,    28,    28,    28,    28,    28,    28,    28,    28,    29,
   nil,    28,    29,   nil,   nil,   nil,   nil,   nil,    29,   nil,
   nil,   nil,   nil,   nil,    29,    29,    29,    29,    29,    29,
    29,    29,    30,   nil,    29,    30,   nil,   nil,   nil,   nil,
   nil,    30,   nil,   nil,   nil,   nil,   nil,    30,    30,    30,
    30,    30,    30,    30,    30,    31,   nil,    30,    31,   nil,
   nil,   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,
    31,    31,    31,    31,    31,    31,    31,    31,    32,   nil,
    31,    32,   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,    32,    32,    32,    32,    32,    32,    32,
    32,    33,   nil,    32,    33,   nil,   nil,   nil,   nil,   nil,
    33,   nil,   nil,   nil,   nil,   nil,    33,    33,    33,    33,
    33,    33,    33,    33,    34,   nil,    33,    34,   nil,   nil,
   nil,   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,    34,
    34,    34,    34,    34,    34,    34,    34,    37,    37,    34,
    37,   nil,   nil,   nil,   nil,   nil,    37,   nil,   nil,   nil,
   nil,   nil,    37,    37,    37,    37,    37,    37,    37,    37,
    35,   nil,    37,    35,   nil,   nil,   nil,   nil,   nil,    35,
   nil,   nil,   nil,   nil,   nil,    35,    35,    35,    35,    35,
    35,    35,    35,    76,   nil,    35,    76,   nil,   nil,   nil,
   nil,   nil,    76,   nil,   nil,   nil,   nil,   nil,    76,    76,
    76,    76,    76,    76,    76,    76,     3,   nil,    76,     3,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
     3,     3,     3,     3,     3,     3,     3,     3,     3,    13,
   nil,     3,    13,   nil,   nil,   nil,   nil,   nil,    13,   nil,
   nil,   nil,   nil,   nil,    13,    13,    13,    13,    13,    13,
    13,    13,   nil,    51,    13,    51,   nil,    51,   nil,    51,
    51,    51,    51,    51,    51,    51,   nil,   nil,   nil,   nil,
    40,    40,    40,   nil,    40,    51,    40,    40,    40,    40,
    40,    40,    40,     2,   nil,     2,   nil,     2,   nil,     2,
     2,     2,     2,     2,     2,     2,    66,   nil,    66,   nil,
    66,   nil,    66,    66,    66,    66,    66,    66,    66,    70,
   nil,    70,   nil,    70,   nil,    70,    70,    70,    70,    70,
    70,    70,    68,   nil,    68,   nil,    68,   nil,    68,    68,
    68,    68,    68,    68,    68,    59,   nil,    59,   nil,    59,
   nil,    59,    59,    59,    59,    59,    59 ]

racc_action_pointer = [
    35,    43,   550,   473,    56,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   496,    24,   nil,   nil,    -4,     5,   nil,
   151,   174,   nil,   nil,    11,   197,    15,   220,   243,   266,
   289,   312,   335,   358,   381,   427,    91,   404,   nil,   128,
   537,   105,    84,    82,    -2,   132,    96,   -11,    66,    63,
    67,   520,   nil,   nil,    19,   138,   155,   109,    86,   602,
    39,    63,   nil,    -3,    14,   nil,   563,   nil,   589,   nil,
   576,    42,   nil,    59,    47,   nil,   450,   nil,   nil,    60,
   nil,    68,   nil,   nil ]

racc_action_default = [
   -55,   -55,    -1,    -2,   -55,    -9,   -10,   -11,   -12,   -13,
   -14,   -15,   -16,   -55,   -18,   -19,   -20,   -21,   -22,   -23,
   -55,   -55,   -34,   -35,    -7,   -55,   -55,    -3,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -4,   -55,
   -55,   -55,   -55,   -55,   -32,   -33,    -8,   -18,   -55,   -55,
   -47,   -55,    84,    -5,   -24,   -25,   -26,   -27,   -28,   -29,
   -30,   -31,   -36,   -53,   -55,   -42,    -6,   -17,   -38,   -44,
   -37,   -55,   -39,    -7,   -55,   -43,   -55,   -41,   -50,   -55,
   -48,   -49,   -54,   -40 ]

racc_goto_table = [
    40,    49,    64,    48,    69,   nil,     1,    44,    45,    38,
   nil,   nil,    51,    75,   nil,    54,    55,    56,    57,    58,
    59,    60,    61,   nil,    63,   nil,    66,   nil,    68,   nil,
    70,   nil,   nil,    53,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    82,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    80,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    63 ]

racc_goto_check = [
     2,    13,    14,     3,     8,   nil,     1,     2,     2,     1,
   nil,   nil,     2,     8,   nil,     2,     2,     2,     2,     2,
     2,     2,     2,   nil,     2,   nil,     2,   nil,     2,   nil,
     2,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    13,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     6,   -13,   -21,   nil,   nil,   nil,   nil,   -38,   nil,
   nil,   nil,   nil,   -23,   -35,   nil,   nil,   nil ]

racc_goto_default = [
   nil,    46,     2,   nil,     9,    10,    11,    12,    15,    16,
    17,    18,    19,   nil,   nil,   nil,    50,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  2, 33, :_reduce_3,
  2, 33, :_reduce_4,
  3, 33, :_reduce_5,
  3, 33, :_reduce_6,
  0, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 34, :_reduce_9,
  1, 34, :_reduce_10,
  1, 34, :_reduce_11,
  1, 34, :_reduce_12,
  1, 34, :_reduce_13,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  3, 34, :_reduce_17,
  1, 34, :_reduce_18,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  3, 38, :_reduce_24,
  3, 38, :_reduce_25,
  3, 38, :_reduce_26,
  3, 38, :_reduce_27,
  3, 38, :_reduce_28,
  3, 38, :_reduce_29,
  3, 38, :_reduce_30,
  3, 38, :_reduce_31,
  2, 39, :_reduce_32,
  2, 39, :_reduce_33,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 43, :_reduce_36,
  3, 44, :_reduce_37,
  3, 37, :_reduce_38,
  3, 40, :_reduce_39,
  5, 40, :_reduce_40,
  4, 41, :_reduce_41,
  3, 41, :_reduce_42,
  3, 42, :_reduce_43,
  3, 42, :_reduce_44,
  0, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 45, :_reduce_47,
  3, 45, :_reduce_48,
  1, 48, :_reduce_49,
  3, 48, :_reduce_50,
  0, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 46, :_reduce_53,
  3, 46, :_reduce_54 ]

racc_reduce_n = 55

racc_shift_n = 84

racc_token_table = {
  false => 0,
  :error => 1,
  :NEW_LINE => 2,
  :LEFT_PARENTHESIS => 3,
  :RIGHT_PARENTHESIS => 4,
  :DOT => 5,
  :NOT_OP => 6,
  :POW => 7,
  :UMINUS => 8,
  :MULTIPLY => 9,
  :DIVIDE => 10,
  :ADD => 11,
  :SUBTRACT => 12,
  :CMP_OP => 13,
  :CMP_EQ_OP => 14,
  :EQ_OP => 15,
  :EQUALS => 16,
  :OP => 17,
  :INTEGER => 18,
  :FLOAT => 19,
  :STRING => 20,
  :NULL => 21,
  :VAR => 22,
  :TRUE => 23,
  :FALSE => 24,
  :CURLY_BRACKET_L => 25,
  :CURLY_BRACKET_R => 26,
  :IN => 27,
  :IF => 28,
  :ELSE => 29,
  :COMMA => 30,
  :CAST => 31 }

racc_nt_base = 32

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NEW_LINE",
  "LEFT_PARENTHESIS",
  "RIGHT_PARENTHESIS",
  "DOT",
  "NOT_OP",
  "POW",
  "UMINUS",
  "MULTIPLY",
  "DIVIDE",
  "ADD",
  "SUBTRACT",
  "CMP_OP",
  "CMP_EQ_OP",
  "EQ_OP",
  "EQUALS",
  "OP",
  "INTEGER",
  "FLOAT",
  "STRING",
  "NULL",
  "VAR",
  "TRUE",
  "FALSE",
  "CURLY_BRACKET_L",
  "CURLY_BRACKET_R",
  "IN",
  "IF",
  "ELSE",
  "COMMA",
  "CAST",
  "$start",
  "expression",
  "value",
  "opt_expression",
  "bool",
  "assignment",
  "boperator",
  "uoperator",
  "block",
  "call_block",
  "if_statement",
  "attribute",
  "attribute_assignment",
  "parameters",
  "arguments",
  "opt_parameters",
  "parameter",
  "opt_arguments" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_3(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_4(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_5(val, _values, result)
     return [*val[0], *val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_6(val, _values, result)
     return [:OP_DEF, val[1], val[2]] 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_9(val, _values, result)
     return [:INTEGER, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_10(val, _values, result)
     return [:FLOAT, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_11(val, _values, result)
     return [:STRING, AdventCore.str_escape(val[0])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_12(val, _values, result)
     return [:NULL, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_13(val, _values, result)
     return [:BOOL, val[0]] 
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_17(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_18(val, _values, result)
     return [:VAR, val[0]] 
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_24(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_25(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_26(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_27(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_28(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_29(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_30(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_31(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_32(val, _values, result)
     return [:UOPERATOR, val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_33(val, _values, result)
     return [:UOPERATOR, val[0], val[1]] 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_36(val, _values, result)
     return [:ATTR, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_37(val, _values, result)
     return [:ATTR_ASSIGN, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_38(val, _values, result)
     return [:ASSIGN, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_39(val, _values, result)
     return [:BLOCK, Block.new(val[1])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_40(val, _values, result)
     return [:BLOCK, Block.new(val[3], val[1])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_41(val, _values, result)
     return [:CALL, val[0], [:ARGS, *val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_42(val, _values, result)
     return [:CALL, val[0], [:ARGS]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_43(val, _values, result)
     return [:IF, val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_44(val, _values, result)
     return [*val[0], [:ELSE, val[2]]] 
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_47(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_48(val, _values, result)
     return [val[0], *val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_49(val, _values, result)
     return [:Any, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_50(val, _values, result)
     return [val[2], val[0]] 
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_53(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_54(val, _values, result)
     return [val[0], *val[2]] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class AdventParser
