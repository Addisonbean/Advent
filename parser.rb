#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

	require_relative "lexer"
	require_relative "lib/my_lang_core"
	require_relative "lib/lang_classes"

class MyLangParser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 89)
	def parse(input)
		scan_str(input)
	end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    33,    24,    24,    25,    36,    26,    27,    28,    29,    31,
    32,    30,     3,    12,   -40,    17,    33,    61,    23,    25,
    24,    18,    65,    70,    60,    64,     4,     5,     6,     7,
    13,    19,    20,    21,     3,    12,    22,    17,    33,    33,
    36,    25,    25,    18,    26,    27,    28,    29,     4,     5,
     6,     7,    41,    19,    20,    21,     3,    12,    22,    17,
    33,    33,    33,    25,    25,    18,    26,    27,    28,    29,
     4,     5,     6,     7,    13,    19,    20,    21,    21,    12,
    22,    17,    33,    33,    66,    25,    25,    18,    26,    27,
    37,    62,     4,     5,     6,     7,    13,    19,    20,    21,
    61,    12,    22,    17,    44,    33,   nil,   nil,    25,    18,
    26,    27,   nil,   nil,     4,     5,     6,     7,    13,    19,
    20,    21,   nil,    12,    22,    17,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,     4,     5,     6,     7,
    13,    19,    20,    21,   nil,    12,    22,    17,   nil,   nil,
   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,     4,     5,
     6,     7,    13,    19,    20,    21,   nil,    12,    22,    17,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
     4,     5,     6,     7,    13,    19,    20,    21,   nil,    12,
    22,    17,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,     4,     5,     6,     7,    13,    19,    20,    21,
   nil,    12,    22,    17,   nil,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,     4,     5,     6,     7,    13,    19,
    20,    21,   nil,   nil,    22,    12,    56,    17,   nil,   nil,
   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,     4,     5,
     6,     7,    13,    19,    20,    21,   nil,    12,    22,    17,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
     4,     5,     6,     7,    13,    19,    20,    21,   nil,    12,
    22,    17,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,     4,     5,     6,     7,    13,    19,    20,    21,
   nil,    12,    22,    17,   nil,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,     4,     5,     6,     7,    13,    19,
    20,    21,   nil,    12,    22,    17,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,     4,     5,     6,     7,
    13,    19,    20,    21,   nil,    12,    22,    17,   nil,   nil,
   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,     4,     5,
     6,     7,    13,    19,    20,    21,   nil,    12,    22,    17,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
     4,     5,     6,     7,    13,    19,    20,    21,   nil,    12,
    22,    17,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,     4,     5,     6,     7,    13,    19,    20,    21,
   nil,    12,    22,    17,   nil,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,     4,     5,     6,     7,    13,    19,
    20,    21,   nil,    12,    22,    17,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,     4,     5,     6,     7,
    13,    19,    20,    21,    33,   nil,    22,    25,   nil,    26,
    27,    28,    29,    31,    32,    30,   nil,   nil,   nil,   nil,
    33,   nil,   nil,    25,    21,    26,    27,    28,    29,    31,
    32,    30,    33,    57,   nil,    25,   nil,    26,    27,    28,
    29,    31,    32,    30,    33,   nil,   nil,    25,   nil,    26,
    27,    28,    29,    31,    32,    30,    33,   nil,   nil,    25,
   nil,    26,    27,    28,    29,    31,    32 ]

racc_action_check = [
    54,    68,    40,    54,    41,    54,    54,    54,    54,    54,
    54,    54,    62,    62,    41,    62,    48,    41,     1,    48,
     1,    62,    55,    68,    40,    54,    62,    62,    62,    62,
    62,    62,    62,    62,    21,    21,    62,    21,    47,    53,
    13,    47,    53,    21,    53,    53,    53,    53,    21,    21,
    21,    21,    21,    21,    21,    21,     0,     0,    21,     0,
    39,    52,    38,    39,    52,     0,    52,    52,    52,    52,
     0,     0,     0,     0,     0,     0,     0,     0,    37,    22,
     0,    22,    46,    50,    61,    46,    50,    22,    50,    50,
    16,    42,    22,    22,    22,    22,    22,    22,    22,    22,
    66,     3,    22,     3,    23,    49,   nil,   nil,    49,     3,
    49,    49,   nil,   nil,     3,     3,     3,     3,     3,     3,
     3,     3,   nil,    32,     3,    32,   nil,   nil,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,    32,    32,    32,    32,
    32,    32,    32,    32,   nil,    17,    32,    17,   nil,   nil,
   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,    17,    17,
    17,    17,    17,    17,    17,    17,   nil,    18,    17,    18,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
    18,    18,    18,    18,    18,    18,    18,    18,   nil,    64,
    18,    64,   nil,   nil,   nil,   nil,   nil,    64,   nil,   nil,
   nil,   nil,    64,    64,    64,    64,    64,    64,    64,    64,
   nil,    12,    64,    12,   nil,   nil,   nil,   nil,   nil,    12,
   nil,   nil,   nil,   nil,    12,    12,    12,    12,    12,    12,
    12,    12,   nil,   nil,    12,    33,    33,    33,   nil,   nil,
   nil,   nil,   nil,    33,   nil,   nil,   nil,   nil,    33,    33,
    33,    33,    33,    33,    33,    33,   nil,    24,    33,    24,
   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,
    24,    24,    24,    24,    24,    24,    24,    24,   nil,    25,
    24,    25,   nil,   nil,   nil,   nil,   nil,    25,   nil,   nil,
   nil,   nil,    25,    25,    25,    25,    25,    25,    25,    25,
   nil,    26,    25,    26,   nil,   nil,   nil,   nil,   nil,    26,
   nil,   nil,   nil,   nil,    26,    26,    26,    26,    26,    26,
    26,    26,   nil,    27,    26,    27,   nil,   nil,   nil,   nil,
   nil,    27,   nil,   nil,   nil,   nil,    27,    27,    27,    27,
    27,    27,    27,    27,   nil,    28,    27,    28,   nil,   nil,
   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,    28,    28,
    28,    28,    28,    28,    28,    28,   nil,    29,    28,    29,
   nil,   nil,   nil,   nil,   nil,    29,   nil,   nil,   nil,   nil,
    29,    29,    29,    29,    29,    29,    29,    29,   nil,    30,
    29,    30,   nil,   nil,   nil,   nil,   nil,    30,   nil,   nil,
   nil,   nil,    30,    30,    30,    30,    30,    30,    30,    30,
   nil,    31,    30,    31,   nil,   nil,   nil,   nil,   nil,    31,
   nil,   nil,   nil,   nil,    31,    31,    31,    31,    31,    31,
    31,    31,   nil,    36,    31,    36,   nil,   nil,   nil,   nil,
   nil,    36,   nil,   nil,   nil,   nil,    36,    36,    36,    36,
    36,    36,    36,    36,    43,   nil,    36,    43,   nil,    43,
    43,    43,    43,    43,    43,    43,   nil,   nil,   nil,   nil,
     2,   nil,   nil,     2,    43,     2,     2,     2,     2,     2,
     2,     2,    35,    35,   nil,    35,   nil,    35,    35,    35,
    35,    35,    35,    35,    58,   nil,   nil,    58,   nil,    58,
    58,    58,    58,    58,    58,    58,    51,   nil,   nil,    51,
   nil,    51,    51,    51,    51,    51,    51 ]

racc_action_pointer = [
    54,    18,   467,    98,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   208,    25,   nil,   nil,    63,   142,   164,   nil,
   nil,    32,    76,   104,   254,   276,   298,   320,   342,   364,
   386,   408,   120,   232,   nil,   479,   430,    55,    59,    57,
     0,   -11,    66,   451,   nil,   nil,    79,    35,    13,   102,
    80,   503,    58,    36,    -3,    18,   nil,   nil,   491,   nil,
   nil,    64,    10,   nil,   186,   nil,    72,   nil,    -1,   nil,
   nil ]

racc_action_default = [
   -46,   -46,    -1,    -4,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -46,   -15,   -16,   -17,   -18,   -46,   -46,   -29,
   -30,   -46,   -46,   -46,    -2,   -46,   -46,   -46,   -46,   -46,
   -46,   -46,   -46,   -46,    -3,   -46,   -46,   -46,   -27,   -28,
   -46,   -15,   -46,   -46,    71,    -5,   -19,   -20,   -21,   -22,
   -23,   -24,   -25,   -26,   -44,   -46,   -35,   -14,   -31,   -37,
   -32,   -46,   -46,   -36,   -46,   -34,   -40,   -41,   -46,   -45,
   -33 ]

racc_goto_table = [
     1,    42,    59,    34,    55,   nil,   nil,   nil,    63,   nil,
   nil,   nil,    35,   nil,   nil,   nil,   nil,    38,    39,   nil,
   nil,    40,    43,   nil,    45,    46,    47,    48,    49,    50,
    51,    52,    53,    54,   nil,    69,    58,   nil,   nil,   nil,
   nil,    67,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    68,   nil,    54 ]

racc_goto_check = [
     1,    10,     7,     1,    11,   nil,   nil,   nil,     7,   nil,
   nil,   nil,     2,   nil,   nil,   nil,   nil,     2,     2,   nil,
   nil,     1,     2,   nil,     1,     2,     2,     2,     2,     2,
     2,     2,     2,     2,   nil,    11,     2,   nil,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     1,   nil,     2 ]

racc_goto_pointer = [
   nil,     0,     0,   nil,   nil,   nil,   nil,   -35,   nil,   nil,
   -20,   -29,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     8,     9,    10,    11,    14,    15,    16,
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_none,
  2, 30, :_reduce_2,
  2, 30, :_reduce_3,
  1, 30, :_reduce_none,
  3, 30, :_reduce_5,
  1, 31, :_reduce_6,
  1, 31, :_reduce_7,
  1, 31, :_reduce_8,
  1, 31, :_reduce_9,
  1, 31, :_reduce_10,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 31, :_reduce_14,
  1, 31, :_reduce_15,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 34, :_reduce_19,
  3, 34, :_reduce_20,
  3, 34, :_reduce_21,
  3, 34, :_reduce_22,
  3, 34, :_reduce_23,
  3, 34, :_reduce_24,
  3, 34, :_reduce_25,
  3, 34, :_reduce_26,
  2, 35, :_reduce_27,
  2, 35, :_reduce_28,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  3, 33, :_reduce_31,
  3, 36, :_reduce_32,
  5, 36, :_reduce_33,
  4, 37, :_reduce_34,
  3, 37, :_reduce_35,
  3, 38, :_reduce_36,
  3, 38, :_reduce_37,
  0, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 39, :_reduce_40,
  3, 39, :_reduce_41,
  0, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 40, :_reduce_44,
  3, 40, :_reduce_45 ]

racc_reduce_n = 46

racc_shift_n = 71

racc_token_table = {
  false => 0,
  :error => 1,
  :NEW_LINE => 2,
  :LEFT_PARENTHESIS => 3,
  :RIGHT_PARENTHESIS => 4,
  :NOT_OP => 5,
  :POW => 6,
  :UMINUS => 7,
  :MULTIPLY => 8,
  :DIVIDE => 9,
  :ADD => 10,
  :SUBTRACT => 11,
  :CMP_OP => 12,
  :CMP_EQ_OP => 13,
  :EQ_OP => 14,
  :EQUALS => 15,
  :INTEGER => 16,
  :FLOAT => 17,
  :STRING => 18,
  :NULL => 19,
  :VAR => 20,
  :TRUE => 21,
  :FALSE => 22,
  :CURLY_BRACKET_L => 23,
  :CURLY_BRACKET_R => 24,
  :IN => 25,
  :IF => 26,
  :ELSE => 27,
  :COMMA => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NEW_LINE",
  "LEFT_PARENTHESIS",
  "RIGHT_PARENTHESIS",
  "NOT_OP",
  "POW",
  "UMINUS",
  "MULTIPLY",
  "DIVIDE",
  "ADD",
  "SUBTRACT",
  "CMP_OP",
  "CMP_EQ_OP",
  "EQ_OP",
  "EQUALS",
  "INTEGER",
  "FLOAT",
  "STRING",
  "NULL",
  "VAR",
  "TRUE",
  "FALSE",
  "CURLY_BRACKET_L",
  "CURLY_BRACKET_R",
  "IN",
  "IF",
  "ELSE",
  "COMMA",
  "$start",
  "expression",
  "value",
  "bool",
  "assignment",
  "boperator",
  "uoperator",
  "block",
  "call_block",
  "if_statement",
  "parameters",
  "arguments",
  "opt_parameters",
  "opt_arguments" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_2(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_3(val, _values, result)
     return val[1] 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_5(val, _values, result)
     return [*val[0], *val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_6(val, _values, result)
     return [:INTEGER, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_7(val, _values, result)
     return [:FLOAT, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_8(val, _values, result)
     return [:STRING, MyLangCore.str_escape(val[0])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_9(val, _values, result)
     return [:NULL, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_10(val, _values, result)
     return [:BOOL, val[0]] 
    result
  end
.,.,

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_14(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_15(val, _values, result)
     return [:VAR, val[0]] 
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_19(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_20(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_21(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_22(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_23(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_24(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_25(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_26(val, _values, result)
     return [:BOPERATOR, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_27(val, _values, result)
     return [:UOPERATOR, val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_28(val, _values, result)
     return [:UOPERATOR, val[0], val[1]] 
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_31(val, _values, result)
     return [:ASSIGN, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_32(val, _values, result)
     return [:BLOCK, Block.new(val[1])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_33(val, _values, result)
     return [:BLOCK, Block.new(val[3], val[1])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_34(val, _values, result)
     return [:CALL, val[0], [:ARGS, *val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_35(val, _values, result)
     return [:CALL, val[0], [:ARGS]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_36(val, _values, result)
     return [:IF, val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_37(val, _values, result)
     return [*val[0], [:ELSE, val[2]]] 
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_40(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_41(val, _values, result)
     return [val[0], *val[2]] 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_44(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_45(val, _values, result)
     return [val[0], *val[2]] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class MyLangParser
